@startuml
title Wakeword

hide footbox

skinparam sequence {
ArrowColor black
ActorBorderColor black
ActorBackgroundColor white
ActorFontName Arial
LifeLineBorderColor black
LifeLineBackgroundColor black
ParticipantBorderColor black
ParticipantBackgroundColor #eaf2f8
}

skinparam NoteBorderThickness 1
skinparam NoteBorderColor black
skinparam NoteBackgroundColor #01cafc
skinparam NoteFontColor #bdf1fe

actor "**Driver**\n(wakeword enabled)" as Driver order 10

participant "**AlexaClientHandler**\naace::alexa::AlexaClient" as AlexaClient  order 20 
participant "**SpeechRecognizerHandler**\naace::alexa::SpeechRecognizer" as SpeechRecognizer order 30
participant "**AudioInputHandler**\naace::audio::AudioInput" as AudioInput order 32
participant "**Microphone**\n(Native Implementation)" as Microphone order 35 
participant "**Alexa Auto SDK**\n**Engine**" as Engine order 100 #46c1cd
participant "**AVS**\n(Alexa endpoint)" as AVS order 150 #FFFFF

AudioInput<--Engine  : startAudioInput()
note left
1
end note

AudioInput->Microphone : Open micropohone
activate Microphone #lightblue

loop 
  ...Wait for wakeword interaction...
  Driver->Microphone : //"Alexa"//
  note left
  2
  end note
    AudioInput<--Microphone : PCM data
    AudioInput->Engine : write( data, size)
end

SpeechRecognizer<--Engine : wakewordDetected()

alt wakewordDetected success
    SpeechRecognizer->Engine : true 

Engine->AVS : Recognize(event)
AlexaClient<--Engine : dialogStateChanged(LISTENING)
Driver<--AlexaClient : Display Voice Chrome\nfor //listening// state

loop
Driver->Microphone : //"What time is it?"//
note left
3
end note
    AudioInput<--Microphone : PCM data
    AudioInput->Engine : write( data, size)
Engine->AVS: Write audio data
end

AVS-->Engine : StopCapture(directive)
SpeechRecognizer<--Engine : endOfSepeechDetected()
AlexaClient<--Engine : dialogStateChanged(THINKING)
Driver<--AlexaClient : Display Voice Chrome\nfor //thinking// state
...Wait for downchannel Alexa response...

else wakewordDetected failure
    SpeechRecognizer->Engine : false 


end

AudioInput<--Engine  : stopAudioInput()
note left
4
end note

AudioInput->Microphone : Close microphone
deactivate Microphone

legend right
|= Legend: |
|<#eaf2f8>OEM Implementation|
|<#0096a5>Alexa Auto SDK Engine|
|<#add8e6>Audio input buffer processing flow|
endlegend

@enduml



