From 22c4f8d4ad8b68a6c9c8e124cd1fe4826d6a7d98 Mon Sep 17 00:00:00 2001
From: Patrick Tsai <yingtsai@amazon.com>
Date: Wed, 23 Feb 2022 11:20:51 -0800
Subject: [PATCH 07/14] Enable security flags

---
 modules/Alexa/build/cmake/BuildOptions.cmake | 11 +++++++++++
 1 file changed, 11 insertions(+)

diff --git a/modules/Alexa/build/cmake/BuildOptions.cmake b/modules/Alexa/build/cmake/BuildOptions.cmake
index fc887a6..4cf9fa6 100644
--- a/modules/Alexa/build/cmake/BuildOptions.cmake
+++ b/modules/Alexa/build/cmake/BuildOptions.cmake
@@ -65,6 +65,10 @@ if (UNIX OR CMAKE_COMPILER_IS_GNUCXX)
         set(CXX_PLATFORM_DEPENDENT_FLAGS_RELEASE "${CXX_PLATFORM_DEPENDENT_FLAGS_RELEASE} -Wno-error=class-memaccess")
         set(CXX_PLATFORM_DEPENDENT_FLAGS_MINSIZEREL "${CXX_PLATFORM_DEPENDENT_FLAGS_MINSIZEREL} -Wno-error=class-memaccess")
     endif()
+    # Security flags
+    set(CXX_PLATFORM_DEPENDENT_FLAGS_DEBUG "${CXX_PLATFORM_DEPENDENT_FLAGS_DEBUG} -fstack-protector-strong -Wformat -Wformat-security -Werror=format-security")
+    set(CXX_PLATFORM_DEPENDENT_FLAGS_RELEASE "${CXX_PLATFORM_DEPENDENT_FLAGS_RELEASE} -fstack-protector-strong -Wformat -Wformat-security -Werror=format-security -D_FORTIFY_SOURCE=2")
+    set(CXX_PLATFORM_DEPENDENT_FLAGS_MINSIZEREL "${CXX_PLATFORM_DEPENDENT_FLAGS_MINSIZEREL} -fstack-protector-strong -Wformat -Wformat-security -Werror=format-security -D_FORTIFY_SOURCE=2")
 elseif(MSVC)
     set(CXX_PLATFORM_DEPENDENT_FLAGS_DEBUG      "/DDEBUG /D_SILENCE_TR1_NAMESPACE_DEPRECATION_WARNING /DACSDK_LOG_ENABLED /DACSDK_DEBUG_LOG_ENABLED /W4 /Zi /VZ /ZW /Od /MDd")
     set(CXX_PLATFORM_DEPENDENT_FLAGS_RELEASE    "/DNDEBUG /D_SILENCE_TR1_NAMESPACE_DEPRECATION_WARNING /W4 /O2 /VZ /ZW /MD")
@@ -97,3 +101,10 @@ set(CMAKE_C_FLAGS_RELEASE ${CMAKE_CXX_FLAGS_RELEASE} CACHE INTERNAL "Flags used
 # Minimum sized release build.
 set(CMAKE_CXX_FLAGS_MINSIZEREL "${CXX_PLATFORM_DEPENDENT_FLAGS_MINSIZEREL} -DRAPIDJSON_HAS_STDSTRING" CACHE INTERNAL "Flags used for minimum sized RELEASE builds" FORCE)
 set(CMAKE_C_FLAGS_MINSIZEREL ${CMAKE_CXX_FLAGS_RELEASE} CACHE INTERNAL "Flags used for minimum sized RELEASE builds" FORCE)
+
+# Linker flags
+if(CMAKE_SYSTEM_NAME MATCHES "^(Linux|Android|QNX)$")
+    set(CMAKE_SHARED_LINKER_FLAGS_DEBUG "-Wl,-z,relro,-z,now -Wl,-z,noexecstack")
+    set(CMAKE_SHARED_LINKER_FLAGS_RELEASE "-Wl,-z,relro,-z,now -Wl,-z,noexecstack")
+    set(CMAKE_SHARED_LINKER_FLAGS_MINSIZEREL "-Wl,-z,relro,-z,now -Wl,-z,noexecstack")
+endif()
-- 
2.36.0

